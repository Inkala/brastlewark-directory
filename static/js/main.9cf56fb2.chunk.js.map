{"version":3,"sources":["containers/GomesList/GnomesList.module.scss","components/GnomeCard/GnomeCard.module.scss","components/Pagination/Pagination.module.scss","components/NotFound/NotFound.module.scss","containers/NavBar/NavBar.module.scss","components/SearchBar/SearchBar.module.scss","components/ServerError/ServerError.module.scss","App.module.scss","components/GnomeDetails/GnomesDetails.module.scss","helpers/directoryService.js","store/actions/actions.js","store/actions/actionTypes.js","components/GnomeCard/GnomeCard.js","components/SearchBar/SearchBar.js","components/Pagination/Pagination.js","components/ServerError/ServerError.js","containers/GomesList/GnomesList.js","components/GnomeDetails/GnomeDetails.js","components/NotFound/NotFound.js","containers/NavBar/NavBar.js","App.js","serviceWorker.js","store/reducers/reducer.js","index.js"],"names":["module","exports","axiosInstance","axios","create","baseURL","getAllGnomesFail","error","type","GnomeCard","gnome","gender","name","length","gnomeImg","backgroundImage","thumbnail","className","classes","gnomeCard","gnomeImage","style","gnomeInfo","SearchBar","state","inputSearch","handleSearch","event","setState","target","value","props","onSearchChange","toLowerCase","searchBar","icon","faSearch","this","onChange","placeholder","Component","connect","searchTerm","dispatch","actions","Pagination","cardsPerPage","totalCards","paginationHandler","currentPage","pageNumbers","pagesAmount","Math","ceil","i","push","pagination","map","num","key","pageButton","active","onClick","ServerError","serverError","GnomesList","displayedGnomes","filteredGnomes","totalGnomes","handlePageChange","handlePagination","startCard","slice","handleGnomesFilter","gnomes","filter","match","onGetGnomes","prevProps","prevState","gnomesList","gnomesWrapper","to","id","spinner","loading","src","alt","Fragment","get","then","res","data","Brastlewark","catch","err","GnomeDetails","friendsList","handleGoBack","history","goBack","params","onGetOneGnome","friends","onGetFriendsList","professions","profession","shortid","generate","infoItem","friend","gnomeDetails","gnomeDetailsWrapper","age","weight","toFixed","round","height","hair_color","faArrowLeft","oneGnome","gnomeId","singleGnome","find","toString","friendsArr","getFriendsListSuccess","NotFound","notFound","notFoundWrapper","NavBar","navBar","logo","App","path","exact","component","Boolean","window","location","hostname","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,cAAgB,kCAAkC,QAAU,8B,mBCA1HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,UAAY,+B,mBCAlHD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,WAAa,+BAA+B,OAAS,6B,mBCAnHD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,gBAAkB,oC,mBCA1ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,mBCAzDD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,IAAM,mB,2ECAxBD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,oBAAsB,2CAA2C,WAAa,kCAAkC,UAAY,iCAAiC,SAAW,gCAAgC,QAAU,+BAA+B,QAAU,iC,2KCKjTC,E,OAJOC,EAAMC,OAAO,CACjCC,QAAS,iECOEC,EAAmB,SAAAC,GAC9B,MAAO,CACLC,KCV+B,sBDW/BD,U,kCEaWE,EArBG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGbC,EAASD,EAAME,KAAKC,OAAS,GAAK,OAAS,SAE3CC,EAAW,CAAEC,gBAAgB,OAAD,OAASL,EAAMM,UAAf,MAClC,OACE,6BAASC,UAAWC,IAAQC,WAC1B,yBAAKF,UAAWC,IAAQE,WAAYC,MAAOP,IAC3C,yBAAKG,UAAWC,IAAQI,WACxB,4BAAKZ,EAAME,MACX,2BAAID,M,iCCPJY,E,2MACJC,MAAQ,CACNC,YAAa,I,EAGfC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,YAAaE,EAAME,OAAOC,QAC1C,EAAKC,MAAMC,eAAeL,EAAME,OAAOC,MAAMG,gB,wEAI7C,OACE,6BAAShB,UAAWC,IAAQgB,WAC1B,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,2BACE5B,KAAK,OACLsB,MAAOO,KAAKb,MAAMC,YAClBa,SAAUD,KAAKX,aACfa,YAAY,2B,GAlBEC,aA0CTC,eAZS,SAAAjB,GACtB,MAAO,CACLkB,WAAYlB,EAAMkB,eAIK,SAAAC,GACzB,MAAO,CACLX,eAAgB,SAAAU,GAAU,OAAIC,EHcL,SAAAD,GAC3B,MAAO,CACLlC,KC3D2B,kBD4D3BkC,cGjBuCE,CAAsBF,QAIlDD,CAA6ClB,G,iBCZ7CsB,EAlCI,SAAC,GAQlB,IAHK,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,YAEMC,EAAc,GACdC,EAAcC,KAAKC,KAAKN,EAAaD,GAClCQ,EAAI,EAAGA,GAAKH,EAAaG,IAChCJ,EAAYK,KAAKD,GAEnB,OACE,wBAAIrC,UAAWC,IAAQsC,YACpBN,EAAYO,KAAI,SAAAC,GAAG,OAClB,wBAAIC,IAAKD,EAAKzC,UAAWC,IAAQ0C,YAC/B,4BACE3C,UAAWyC,IAAQT,EAAc/B,IAAQ2C,OAAS,KAClDC,QAAS,kBAAMd,EAAkBU,KAEhCA,S,iBCTEK,EAZK,WAClB,OACE,6BAAS9C,UAAWC,IAAQ8C,aAC1B,iHAIA,wDCEAC,E,2MACJzC,MAAQ,CACN0C,gBAAiB,GACjBC,eAAgB,KAChBrB,aAAc,GACdsB,YAAa,EACbnB,YAAa,G,EAuBfoB,iBAAmB,SAAApB,GACjB,EAAKrB,SAAS,CAAEqB,gBAChB,EAAKqB,iBAAiBrB,I,EAGxBqB,iBAAmB,SAAArB,GAAgB,IAAD,EACS,EAAKzB,MAAtCsB,EADwB,EACxBA,aAAcqB,EADU,EACVA,eAChBI,EAAYtB,EAAc,EAC1BiB,EAAkBC,EAAeK,MACrCD,EACAA,EAAYzB,GAGd,EAAKlB,SAAS,CAAEsC,kBAAiBE,YAAaD,EAAetD,U,EAG/D4D,mBAAqB,SAAA/B,GACnB,IAAMyB,EAAiB,EAAKpC,MAAM2C,OAAOC,QAAO,qBAAG/D,KAC5CqB,cAAc2C,MAAMlC,MAE3B,EAAKd,SAAS,CAAEuC,iBAAgBlB,YAAa,K,mFAvC7CZ,KAAKN,MAAM8C,gB,yCAGMC,EAAWC,GAAY,IAAD,EACR1C,KAAKN,MAA5B2C,EAD+B,EAC/BA,OAAQhC,EADuB,EACvBA,WADuB,EAECL,KAAKb,MAArCyB,EAF+B,EAE/BA,YAAakB,EAFkB,EAElBA,eAEjBO,IAAWI,EAAUJ,QACvBrC,KAAKT,SAAS,CAAEuC,eAAgBO,IAE9BP,IAAmBY,EAAUZ,gBAC/B9B,KAAKiC,iBAAiBrB,GAGpBP,IAAeoC,EAAUpC,YAC3BL,KAAKoC,mBAAmB/B,K,+BA2BlB,IAAD,EAMHL,KAAKb,MAJP0C,EAFK,EAELA,gBACAC,EAHK,EAGLA,eACArB,EAJK,EAILA,aACAG,EALK,EAKLA,YAEE+B,EACF,uFAEEd,GAAmBA,EAAgBrD,SACrCmE,EACE,6BAAS/D,UAAWC,IAAQ+D,eACzBf,EAAgBT,KAAI,SAAA/C,GAAK,OACxB,kBAAC,IAAD,CAAMwE,GAAE,kBAAaxE,EAAMyE,IAAMxB,IAAKjD,EAAMyE,IAC1C,kBAAC,EAAD,CAAWzE,MAAOA,UAM5B,IAAM0E,EACJ,yBAAKnE,UAAWC,IAAQmE,SACtB,yBAAKC,IAAI,kBAAkBC,IAAI,aAInC,OAAOlD,KAAKN,MAAMxB,MAChB,kBAAC,EAAD,MAEA,0BAAMU,UAAWC,IAAQ8D,YACvB,kBAAC,EAAD,MACA,uDACCd,GAAmBC,EAClB,kBAAC,IAAMqB,SAAP,KACGR,EACD,6BACE,kBAAC,EAAD,CACEjC,WAAYV,KAAKb,MAAM4C,YACvBtB,aAAcA,EACdE,kBAAmBX,KAAKgC,iBACxBpB,YAAaA,MAKnBmC,O,GAlGe5C,aA+HVC,eAfS,SAAAjB,GACtB,MAAO,CACLkD,OAAQlD,EAAMkD,OACdW,QAAS7D,EAAM6D,QACf3C,WAAYlB,EAAMkB,WAClBnC,MAAOiB,EAAMjB,UAIU,SAAAoC,GACzB,MAAO,CACLkC,YAAa,kBAAMlC,GN/Gd,SAAAA,GAEL,OADAA,EAPK,CACLnC,KCnBgC,yBD0BzBL,EACJsF,IAAI,cACJC,MAAK,SAAAC,GACJhD,EAzBC,CACLnC,KCJkC,iBDKlCkE,OAuBiCiB,EAAIC,KAAKC,iBAEvCC,OAAM,SAAAC,GACLpD,EAASrC,EAAiByF,cM2GnBtD,CAA6CwB,G,iCC/HtD+B,E,2MACJxE,MAAQ,CACNd,MAAO,GACPuF,YAAa,I,EAoBfC,aAAe,WACb,EAAKnE,MAAMoE,QAAQC,U,mFAlBA,IACXjB,EAAO9C,KAAKN,MAAM6C,MAAMyB,OAAxBlB,GACR9C,KAAKN,MAAMuE,cAAcnB,K,yCAGRL,GACbzC,KAAKN,MAAM6C,MAAMyB,SAAWvB,EAAUF,MAAMyB,QAC9ChE,KAAKN,MAAMuE,cAAcjE,KAAKN,MAAM6C,MAAMyB,OAAOlB,IAE/C9C,KAAKN,MAAMrB,MAAM6F,UAAYzB,EAAUpE,MAAM6F,SAC/ClE,KAAKN,MAAMyE,iBAAiBnE,KAAKN,MAAMrB,MAAM6F,SAE3ClE,KAAKN,MAAMkE,cAAgBnB,EAAUmB,aACvC5D,KAAKT,SAAS,CAAEqE,YAAa5D,KAAKN,MAAMkE,gB,+BAQlC,IACAvF,EAAU2B,KAAKN,MAAfrB,MACAuF,EAAgB5D,KAAKb,MAArByE,YACFnF,EAAW,CAAEC,gBAAgB,OAAD,OAASL,EAAMM,UAAf,MAE9ByF,EAAc,oDACdF,EAAU,wDAEV7F,EAAM+F,aAAe/F,EAAM+F,YAAY5F,SACzC4F,EAAc/F,EAAM+F,YAAYhD,KAAI,SAAAiD,GAClC,IAAMvB,EAAKwB,IAAQC,WACnB,OACE,wBAAIjD,IAAKwB,EAAIlE,UAAWC,IAAQ2F,UAC7BH,OAMLT,GAAeA,EAAYpF,SAC7B0F,EAAUN,EAAYxC,KAAI,SAAAqD,GAAM,OAC9B,wBAAInD,IAAKmD,EAAO3B,GAAIlE,UAAWC,IAAQ2F,UACrC,kBAAC,IAAD,CAAM3B,GAAE,kBAAa4B,EAAO3B,KAAO2B,EAAOlG,WAKhD,IAAMwE,EACJ,yBAAKnE,UAAWC,IAAQmE,SACtB,yBAAKC,IAAI,kBAAkBC,IAAI,aAInC,OAAOlD,KAAKN,MAAMxB,MAChB,6BAASU,UAAWC,IAAQ6F,cAC1B,kBAAC,EAAD,OAGF,6BAAS9F,UAAWC,IAAQ6F,cAC1B,4BAAKrG,EAAME,MACVF,EAAME,KACL,6BAASK,UAAWC,IAAQ8F,qBAC1B,yBAAK/F,UAAWC,IAAQE,WAAYC,MAAOP,IAC3C,6BAASG,UAAWC,IAAQI,WAC1B,2BAAG,yCAAH,UACA,2BAAG,2CAAyB,IAAKZ,EAAME,KAAKC,OAAS,GAAK,OAAS,UACnE,2BAAG,wCAAH,IAA0BH,EAAMuG,KAChC,2BAAG,2CAAH,IAA6BvG,EAAMwG,OAAOC,QAAQ,GAAlD,OACA,2BAAG,2CAAH,IAA6B/D,KAAKgE,MAAM1G,EAAM2G,QAA9C,OACA,2BAAG,+CAAH,IAAiC3G,EAAM4G,YACvC,2BAAG,iDACH,wBAAIrG,UAAWC,IAAQuF,aAAcA,GACrC,2BAAG,6CACH,wBAAIxF,UAAWC,IAAQqF,SAAUA,KAIrCnB,EAEF,4BAAQtB,QAASzB,KAAK6D,cACpB,kBAAC,IAAD,CAAiB/D,KAAMoF,MADzB,gB,GAtFmB/E,aAuHZC,eAxBS,SAAAjB,GACtB,MAAO,CACLd,MAAOc,EAAMgG,SACbnC,QAAS7D,EAAM6D,QACfY,YAAazE,EAAMyE,YACnB1F,MAAOiB,EAAMjB,UAYU,SAAAoC,GACzB,MAAO,CACL2D,cAAe,SAAAmB,GAAO,OAAI9E,EPlFH,SAAA8E,GACzB,OAAO,SAAA9E,GAEL,OADAA,EA5BK,CACLnC,KCnBgC,yBD+CzBL,EACJsF,IAAI,cACJC,MAAK,SAAAC,GACJ,IAAM+B,EAAc/B,EAAIC,KAAKC,YAAY8B,MACvC,SAAAjH,GAAK,OAAIA,EAAMyE,GAAGyC,aAAeH,KAEnC9E,EAfC,CACLnC,KCpCiC,wBDqCjCgH,SAagCE,OAE7B5B,OAAM,SAAAC,GACLpD,EAASrC,EAAiByF,QOsEKnD,CAAoB6E,KACvDjB,iBAAkB,SAAAqB,GAAU,OAAIlF,EPpDN,SAAAkF,GAC5B,OAAO,SAAAlF,GAEL,OADAA,EA3DK,CACLnC,KCnBgC,yBD8EzBL,EACJsF,IAAI,cACJC,MAAK,SAAAC,GACJ,IAAMM,EAAc4B,EAAWpE,KAAI,SAAAqD,GAAM,OACvCnB,EAAIC,KAAKC,YAAY8B,MAAK,SAAAjH,GAAK,OAAIA,EAAME,OAASkG,QAEpDnE,EAhB6B,SAAAsD,GACnC,MAAO,CACLzF,KCjEoC,2BDkEpCyF,eAaa6B,CAAsB7B,OAEhCH,OAAM,SAAAC,GACLpD,EAASrC,EAAiByF,QOwCWnD,CAAuBiF,QAIrDpF,CAA6CuD,G,iBC/G7C+B,EAhBE,WACf,OACE,6BAAS9G,UAAWC,IAAQ8G,UAC1B,yBAAK/G,UAAWC,IAAQ+G,iBACtB,yBAAK3C,IAAI,0BAA0BC,IAAI,KACvC,6BACE,uCACA,uDACA,wDACA,kBAAC,IAAD,CAAML,GAAG,KAAT,yB,kCCMKgD,EAdA,WACb,OACE,yBAAKjH,UAAWC,IAAQiH,QACtB,kBAAC,IAAD,CAASlH,UAAU,OAAOiE,GAAG,KAC3B,yBACEI,IAAI,eACJC,IAAI,mBACJtE,UAAWC,IAAQkH,UCUdC,MAbf,WACE,OACE,yBAAKpH,UAAWC,IAAQmH,KACtB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAWxC,IAC3C,kBAAC,IAAD,CAAOsC,KAAK,IAAIC,OAAK,EAACC,UAAWvE,IACjC,kBAAC,IAAD,CAAOuE,UAAWT,OCJNU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShE,MACvB,2D,aChBAiE,GAAe,CACnBnE,OAAQ,GACR8C,SAAU,GACV9E,WAAY,IA2CCoG,GAxCC,WAAmC,IAAlCtH,EAAiC,uDAAzBqH,GAAcE,EAAW,uCAChD,OAAQA,EAAOvI,MACb,IXVgC,uBWW9B,OAAO,gBACFgB,EADL,CAEE6D,SAAS,IAEb,IXdkC,iBWehC,OAAO,gBACF7D,EADL,CAEEkD,OAAQqE,EAAOrE,OACfW,SAAS,IAEb,IXnB+B,sBWoB7B,OAAO,gBACF7D,EADL,CAEE6D,SAAS,EACT9E,MAAOwI,EAAOxI,QAElB,IXxBiC,wBWyB/B,OAAO,gBACFiB,EADL,CAEEgG,SAAUuB,EAAOvB,SACjBnC,SAAS,IAEb,IX7B2B,kBW8BzB,OAAO,gBACF7D,EADL,CAEEkB,WAAYqG,EAAOrG,aAEvB,IXjCoC,2BWkClC,OAAO,gBACFlB,EADL,CAEEyE,YAAa8C,EAAO9C,cAExB,QACE,OAAOzE,IChCPwH,GAAmBN,OAAOO,sCAAwCC,IAElEC,GAAQC,YAAYN,GAASE,GAAiBK,YAAgBC,OAEpEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJM,SAASC,eAAe,SF6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnE,MAAK,SAAAoE,GACjCA,EAAaC,kB","file":"static/js/main.9cf56fb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gnomesList\":\"GnomesList_gnomesList__1BIib\",\"gnomesWrapper\":\"GnomesList_gnomesWrapper__1_NFU\",\"loading\":\"GnomesList_loading__3Hywp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gnomeCard\":\"GnomeCard_gnomeCard__u6EOv\",\"gnomeImage\":\"GnomeCard_gnomeImage__2q6tU\",\"gnomeInfo\":\"GnomeCard_gnomeInfo__jCERk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__3K5C-\",\"pageButton\":\"Pagination_pageButton__2xbtv\",\"active\":\"Pagination_active__S-Btt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__2JdKw\",\"notFoundWrapper\":\"NotFound_notFoundWrapper__2r-UR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__3tKgE\",\"logo\":\"NavBar_logo__3kAWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1hWdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serverError\":\"ServerError_serverError__1Z8Wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gnomeDetails\":\"GnomesDetails_gnomeDetails__UU4V1\",\"gnomeDetailsWrapper\":\"GnomesDetails_gnomeDetailsWrapper__3rRGQ\",\"gnomeImage\":\"GnomesDetails_gnomeImage__kdQcH\",\"gnomeInfo\":\"GnomesDetails_gnomeInfo__3KEVZ\",\"infoItem\":\"GnomesDetails_infoItem__fF8j2\",\"friends\":\"GnomesDetails_friends__Gr6y_\",\"loading\":\"GnomesDetails_loading__3XXq7\"};","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://raw.githubusercontent.com/rrafols/mobile_test/master'\n});\n\nexport default axiosInstance;\n","import axios from '../../helpers/directoryService';\nimport * as actionTypes from './actionTypes';\n\nexport const getAllGnomesSuccess = gnomes => {\n  return {\n    type: actionTypes.GET_ALL_GNOMES_SUCCESS,\n    gnomes\n  };\n};\n\nexport const getAllGnomesFail = error => {\n  return {\n    type: actionTypes.GET_ALL_GNOMES_FAIL,\n    error\n  };\n};\n\nexport const getAllGnomesStart = () => {\n  return {\n    type: actionTypes.GET_ALL_GNOMES_START\n  };\n};\n\nexport const getAllGnomes = () => {\n  return dispatch => {\n    dispatch(getAllGnomesStart());\n    return axios\n      .get('/data.json')\n      .then(res => {\n        dispatch(getAllGnomesSuccess(res.data.Brastlewark));\n      })\n      .catch(err => {\n        dispatch(getAllGnomesFail(err));\n      });\n  };\n};\n\nexport const getOneGnomeSuccess = oneGnome => {\n  return {\n    type: actionTypes.GET_ONE_GNOME_SUCCESS,\n    oneGnome\n  };\n};\n\nexport const getOneGnome = gnomeId => {\n  return dispatch => {\n    dispatch(getAllGnomesStart());\n    return axios\n      .get('/data.json')\n      .then(res => {\n        const singleGnome = res.data.Brastlewark.find(\n          gnome => gnome.id.toString() === gnomeId\n        );\n        dispatch(getOneGnomeSuccess(singleGnome));\n      })\n      .catch(err => {\n        dispatch(getAllGnomesFail(err));\n      });\n  };\n};\n\nexport const setSearchTerm = searchTerm => {\n  return {\n    type: actionTypes.SET_SEARCH_TERM,\n    searchTerm\n  };\n};\n\nexport const getFriendsListSuccess = friendsList => {\n  return {\n    type: actionTypes.GET_FRIENDS_LIST_SUCCESS,\n    friendsList\n  };\n};\n\nexport const getFriendsList = friendsArr => {\n  return dispatch => {\n    dispatch(getAllGnomesStart());\n    return axios\n      .get('/data.json')\n      .then(res => {\n        const friendsList = friendsArr.map(friend =>\n          res.data.Brastlewark.find(gnome => gnome.name === friend)\n        );\n        dispatch(getFriendsListSuccess(friendsList));\n      })\n      .catch(err => {\n        dispatch(getAllGnomesFail(err));\n      });\n  };\n};\n","export const GET_ALL_GNOMES_START = 'GET_ALL_GNOMES_START';\nexport const GET_ALL_GNOMES_SUCCESS = 'GET_ALL_GNOMES';\nexport const GET_ALL_GNOMES_FAIL = 'GET_ALL_GNOMES_FAIL';\nexport const GET_ONE_GNOME_SUCCESS = 'GET_ONE_GNOME_SUCCESS';\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\nexport const GET_FRIENDS_LIST_SUCCESS = 'GET_FRIENDS_LIST_SUCCESS';","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './GnomeCard.module.scss';\n\nconst GnomeCard = ({ gnome }) => {\n  \n  // Just a random way to add a gender for the card\n  const gender = gnome.name.length < 20 ? 'Male' : 'Female';\n  \n  const gnomeImg = { backgroundImage: `url(${gnome.thumbnail})` };\n  return (\n    <article className={classes.gnomeCard}>\n      <div className={classes.gnomeImage} style={gnomeImg}></div>\n      <div className={classes.gnomeInfo}>\n      <h3>{gnome.name}</h3>\n      <p>{gender}</p>\n      </div>\n    </article>\n  );\n};\n\nGnomeCard.propTypes = {\n  gnome: PropTypes.object\n};\n\nexport default GnomeCard;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport * as actions from '../../store/actions/actions';\nimport classes from './SearchBar.module.scss';\n\nclass SearchBar extends Component {\n  state = {\n    inputSearch: ''\n  }\n  \n  handleSearch = event => {\n    this.setState({ inputSearch: event.target.value });\n    this.props.onSearchChange(event.target.value.toLowerCase());\n  };\n  \n  render() {\n    return (\n      <section className={classes.searchBar}>\n        <FontAwesomeIcon icon={faSearch} />\n        <input\n          type=\"text\"\n          value={this.state.inputSearch}\n          onChange={this.handleSearch}\n          placeholder=\"Search by name...\"\n        />\n      </section>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  searchTerm: PropTypes.string,\n  onSearchChange: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    searchTerm: state.searchTerm\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: searchTerm => dispatch(actions.setSearchTerm(searchTerm))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Pagination.module.scss';\n\nconst Pagination = ({\n  cardsPerPage,\n  totalCards,\n  paginationHandler,\n  currentPage\n}) => {\n  const pageNumbers = [];\n  const pagesAmount = Math.ceil(totalCards / cardsPerPage);\n  for (let i = 1; i <= pagesAmount; i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <ul className={classes.pagination}>\n      {pageNumbers.map(num => (\n        <li key={num} className={classes.pageButton}>\n          <button\n            className={num === currentPage ? classes.active : null}\n            onClick={() => paginationHandler(num)}\n          >\n            {num}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  cardsPerPage: PropTypes.number,\n  totalCards: PropTypes.number,\n  currentPage: PropTypes.number,\n  paginationHandler: PropTypes.func,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport classes from './ServerError.module.scss';\n\nconst ServerError = () => {\n  return (\n    <section className={classes.serverError}>\n      <p>\n        Opps... There was an error while finding the gnomes. Maybe the orcs are\n        attacking.\n      </p>\n      <p>Please try again later.</p>\n    </section>\n  );\n};\n\nexport default ServerError;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport * as actions from '../../store/actions/actions';\nimport classes from './GnomesList.module.scss';\nimport GnomeCard from '../../components/GnomeCard/GnomeCard';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport Pagination from '../../components/Pagination/Pagination';\nimport ServerError from '../../components/ServerError/ServerError';\n\nclass GnomesList extends Component {\n  state = {\n    displayedGnomes: [], // Gnomes to show after filter and pagination\n    filteredGnomes: null, // Gnomes to use on pagination\n    cardsPerPage: 30, // Number of cards per page\n    totalGnomes: 0, // Total amount of gnomes to calculate amount of pages\n    currentPage: 1\n  };\n\n  componentDidMount() {\n    this.props.onGetGnomes();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { gnomes, searchTerm } = this.props;\n    const { currentPage, filteredGnomes } = this.state;\n\n    if (gnomes !== prevProps.gnomes) {\n      this.setState({ filteredGnomes: gnomes });\n    }\n    if (filteredGnomes !== prevState.filteredGnomes) {\n      this.handlePagination(currentPage);\n    }\n\n    if (searchTerm !== prevProps.searchTerm) {\n      this.handleGnomesFilter(searchTerm);\n    }\n  }\n\n  handlePageChange = currentPage => {\n    this.setState({ currentPage });\n    this.handlePagination(currentPage);\n  };\n\n  handlePagination = currentPage => {\n    const { cardsPerPage, filteredGnomes } = this.state;\n    const startCard = currentPage - 1;\n    const displayedGnomes = filteredGnomes.slice(\n      startCard,\n      startCard + cardsPerPage\n    );\n\n    this.setState({ displayedGnomes, totalGnomes: filteredGnomes.length });\n  };\n\n  handleGnomesFilter = searchTerm => {\n    const filteredGnomes = this.props.gnomes.filter(({ name }) =>\n      name.toLowerCase().match(searchTerm)\n    );\n    this.setState({ filteredGnomes, currentPage: 1 });\n  };\n\n  render() {\n    const {\n      displayedGnomes,\n      filteredGnomes,\n      cardsPerPage,\n      currentPage\n    } = this.state;\n    let gnomesList = (\n      <p>This gnome doesn't live here. Please try another name...</p>\n    );\n    if (displayedGnomes && displayedGnomes.length) {\n      gnomesList = (\n        <section className={classes.gnomesWrapper}>\n          {displayedGnomes.map(gnome => (\n            <Link to={`/gnomes/${gnome.id}`} key={gnome.id}>\n              <GnomeCard gnome={gnome} />\n            </Link>\n          ))}\n        </section>\n      );\n    }\n    const spinner = (\n      <div className={classes.loading}>\n        <img src=\"img/loading.gif\" alt=\"loading\" />\n      </div>\n    );\n\n    return this.props.error ? (\n      <ServerError />\n    ) : (\n      <main className={classes.gnomesList}>\n        <SearchBar />\n        <h1>Welcome to Brastlewark!</h1>\n        {displayedGnomes && filteredGnomes ? (\n          <React.Fragment>\n            {gnomesList}\n            <nav>\n              <Pagination\n                totalCards={this.state.totalGnomes}\n                cardsPerPage={cardsPerPage}\n                paginationHandler={this.handlePageChange}\n                currentPage={currentPage}\n              />\n            </nav>\n          </React.Fragment>\n        ) : (\n          spinner\n        )}\n      </main>\n    );\n  }\n}\n\nGnomesList.propTypes = {\n  gnomes: PropTypes.array,\n  loading: PropTypes.bool,\n  searchTerm: PropTypes.string,\n  onGetGnomes: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    gnomes: state.gnomes,\n    loading: state.loading,\n    searchTerm: state.searchTerm,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetGnomes: () => dispatch(actions.getAllGnomes())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GnomesList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport * as actions from '../../store/actions/actions';\nimport classes from './GnomesDetails.module.scss';\nimport ServerError from '../ServerError/ServerError';\n\nclass GnomeDetails extends Component {\n  state = {\n    gnome: {},\n    friendsList: []\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.onGetOneGnome(id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params !== prevProps.match.params) {\n      this.props.onGetOneGnome(this.props.match.params.id);\n    }\n    if (this.props.gnome.friends !== prevProps.gnome.friends) {\n      this.props.onGetFriendsList(this.props.gnome.friends);\n    }\n    if (this.props.friendsList !== prevProps.friendsList) {\n      this.setState({ friendsList: this.props.friendsList });\n    }\n  }\n\n  handleGoBack = () => {\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { gnome } = this.props;\n    const { friendsList } = this.state;\n    const gnomeImg = { backgroundImage: `url(${gnome.thumbnail})` };\n\n    let professions = <small>No jobs so far...</small>;\n    let friends = <small>No friends to show...</small>;\n\n    if (gnome.professions && gnome.professions.length) {\n      professions = gnome.professions.map(profession => {\n        const id = shortid.generate();\n        return (\n          <li key={id} className={classes.infoItem}>\n            {profession}\n          </li>\n        );\n      });\n    }\n\n    if (friendsList && friendsList.length) {\n      friends = friendsList.map(friend => (\n        <li key={friend.id} className={classes.infoItem}>\n          <Link to={`/gnomes/${friend.id}`}>{friend.name}</Link>\n        </li>\n      ));\n    }\n\n    const spinner = (\n      <div className={classes.loading}>\n        <img src=\"img/loading.gif\" alt=\"loading\" />\n      </div>\n    );\n\n    return this.props.error ? (\n      <section className={classes.gnomeDetails}>\n        <ServerError />\n      </section>\n    ) : (\n      <section className={classes.gnomeDetails}>\n        <h1>{gnome.name}</h1>\n        {gnome.name ? (\n          <section className={classes.gnomeDetailsWrapper}>\n            <div className={classes.gnomeImage} style={gnomeImg}></div>\n            <section className={classes.gnomeInfo}>\n              <p><strong>Race:</strong> Gnome</p>\n              <p><strong>Gender:</strong>{' '}{gnome.name.length < 20 ? 'Male' : 'Female'}</p>\n              <p><strong>Age:</strong> {gnome.age}</p>\n              <p><strong>Weight:</strong> {gnome.weight.toFixed(2)} kg</p>\n              <p><strong>Height:</strong> {Math.round(gnome.height)} cm</p>\n              <p><strong>Hair Color:</strong> {gnome.hair_color}</p>\n              <p><strong>Professions:</strong></p>\n              <ul className={classes.professions}>{professions}</ul>\n              <p><strong>Friends:</strong></p>\n              <ul className={classes.friends}>{friends}</ul>\n            </section>\n          </section>\n        ) : (\n          spinner\n        )}\n        <button onClick={this.handleGoBack}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n          Go Back\n        </button>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    gnome: state.oneGnome,\n    loading: state.loading,\n    friendsList: state.friendsList,\n    error: state.error\n  };\n};\n\nGnomeDetails.propTypes = {\n  gnome: PropTypes.object,\n  loading: PropTypes.bool,\n  friendsList: PropTypes.array,\n  onGetOneGnome: PropTypes.func,\n  onGetFriendsList: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetOneGnome: gnomeId => dispatch(actions.getOneGnome(gnomeId)),\n    onGetFriendsList: friendsArr => dispatch(actions.getFriendsList(friendsArr))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GnomeDetails);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './NotFound.module.scss';\n\nconst NotFound = () => {\n  return (\n    <section className={classes.notFound}>\n      <div className={classes.notFoundWrapper}>\n        <img src=\"img/gnome-character.jpg\" alt='' />\n        <div>\n          <h2>~ 404 ~</h2>\n          <h3>Are you lost, traveler?</h3>\n          <p>Please try anorher route.</p>\n          <Link to=\"/\">Go back to safety</Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavBar.module.scss';\n\nconst NavBar = () => {\n  return (\n    <nav className={classes.navBar}>\n      <NavLink className='test' to=\"/\">\n        <img\n          src=\"img/logo.png\"\n          alt=\"Brastlewark logo\"\n          className={classes.logo}\n        />\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport GnomesList from './containers/GomesList/GnomesList';\nimport GnomeDetails from './components/GnomeDetails/GnomeDetails';\nimport NotFound from './components/NotFound/NotFound';\nimport classes from './App.module.scss';\nimport NavBar from './containers/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <NavBar />\n      <Switch>\n        <Route path=\"/gnomes/:id\" exact component={GnomeDetails} />\n        <Route path=\"/\" exact component={GnomesList} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  gnomes: [],\n  oneGnome: {},\n  searchTerm: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ALL_GNOMES_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionTypes.GET_ALL_GNOMES_SUCCESS:\n      return {\n        ...state,\n        gnomes: action.gnomes,\n        loading: false\n      };\n    case actionTypes.GET_ALL_GNOMES_FAIL: \n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      };\n    case actionTypes.GET_ONE_GNOME_SUCCESS:\n      return {\n        ...state,\n        oneGnome: action.oneGnome,\n        loading: false\n      };\n    case actionTypes.SET_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: action.searchTerm\n      };\n    case actionTypes.GET_FRIENDS_LIST_SUCCESS:\n      return {\n        ...state,\n        friendsList: action.friendsList\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}